diff -BurpN iptables.orig/extensions/libxt_conntrack.c iptables/extensions/libxt_conntrack.c
--- iptables.orig/extensions/libxt_conntrack.c	2011-03-13 19:29:49.000000000 +0000
+++ iptables/extensions/libxt_conntrack.c	2011-03-13 21:17:41.513163002 +0000
@@ -46,18 +46,6 @@ static void conntrack_mt_help(void)
 "    --ctdir {ORIGINAL|REPLY}   Flow direction of packet\n");
 }
 
-static const struct option conntrack_mt_opts_v0[] = {
-	{.name = "ctstate",   .has_arg = true, .val = '1'},
-	{.name = "ctproto",   .has_arg = true, .val = '2'},
-	{.name = "ctorigsrc", .has_arg = true, .val = '3'},
-	{.name = "ctorigdst", .has_arg = true, .val = '4'},
-	{.name = "ctreplsrc", .has_arg = true, .val = '5'},
-	{.name = "ctrepldst", .has_arg = true, .val = '6'},
-	{.name = "ctstatus",  .has_arg = true, .val = '7'},
-	{.name = "ctexpire",  .has_arg = true, .val = '8'},
-	{ .name = NULL }
-};
-
 static const struct option conntrack_mt_opts[] = {
 	{.name = "ctstate",       .has_arg = true, .val = '1'},
 	{.name = "ctproto",       .has_arg = true, .val = '2'},
@@ -287,156 +275,6 @@ conntrack_ps_expires(struct xt_conntrack
 	info->expires_max = max;
 }
 
-static int conntrack_parse(int c, char **argv, int invert, unsigned int *flags,
-                           const void *entry, struct xt_entry_match **match)
-{
-	struct xt_conntrack_info *sinfo = (void *)(*match)->data;
-	char *protocol = NULL;
-	unsigned int naddrs = 0;
-	struct in_addr *addrs = NULL;
-
-
-	switch (c) {
-	case '1':
-		xtables_check_inverse(optarg, &invert, &optind, 0);
-
-		parse_states(argv[optind-1], sinfo);
-		if (invert) {
-			sinfo->invflags |= XT_CONNTRACK_STATE;
-		}
-		sinfo->flags |= XT_CONNTRACK_STATE;
-		break;
-
-	case '2':
-		xtables_check_inverse(optarg, &invert, &optind, 0);
-
-		if(invert)
-			sinfo->invflags |= XT_CONNTRACK_PROTO;
-
-		/* Canonicalize into lower case */
-		for (protocol = argv[optind-1]; *protocol; protocol++)
-			*protocol = tolower(*protocol);
-
-		protocol = argv[optind-1];
-		sinfo->tuple[IP_CT_DIR_ORIGINAL].dst.protonum =
-			xtables_parse_protocol(protocol);
-
-		if (sinfo->tuple[IP_CT_DIR_ORIGINAL].dst.protonum == 0
-		    && (sinfo->invflags & XT_INV_PROTO))
-			xtables_error(PARAMETER_PROBLEM,
-				   "rule would never match protocol");
-
-		sinfo->flags |= XT_CONNTRACK_PROTO;
-		break;
-
-	case '3':
-		xtables_check_inverse(optarg, &invert, &optind, 0);
-
-		if (invert)
-			sinfo->invflags |= XT_CONNTRACK_ORIGSRC;
-
-		xtables_ipparse_any(argv[optind-1], &addrs,
-					&sinfo->sipmsk[IP_CT_DIR_ORIGINAL],
-					&naddrs);
-		if(naddrs > 1)
-			xtables_error(PARAMETER_PROBLEM,
-				"multiple IP addresses not allowed");
-
-		if(naddrs == 1) {
-			sinfo->tuple[IP_CT_DIR_ORIGINAL].src.ip = addrs[0].s_addr;
-		}
-
-		sinfo->flags |= XT_CONNTRACK_ORIGSRC;
-		break;
-
-	case '4':
-		xtables_check_inverse(optarg, &invert, &optind, 0);
-
-		if (invert)
-			sinfo->invflags |= XT_CONNTRACK_ORIGDST;
-
-		xtables_ipparse_any(argv[optind-1], &addrs,
-					&sinfo->dipmsk[IP_CT_DIR_ORIGINAL],
-					&naddrs);
-		if(naddrs > 1)
-			xtables_error(PARAMETER_PROBLEM,
-				"multiple IP addresses not allowed");
-
-		if(naddrs == 1) {
-			sinfo->tuple[IP_CT_DIR_ORIGINAL].dst.ip = addrs[0].s_addr;
-		}
-
-		sinfo->flags |= XT_CONNTRACK_ORIGDST;
-		break;
-
-	case '5':
-		xtables_check_inverse(optarg, &invert, &optind, 0);
-
-		if (invert)
-			sinfo->invflags |= XT_CONNTRACK_REPLSRC;
-
-		xtables_ipparse_any(argv[optind-1], &addrs,
-					&sinfo->sipmsk[IP_CT_DIR_REPLY],
-					&naddrs);
-		if(naddrs > 1)
-			xtables_error(PARAMETER_PROBLEM,
-				"multiple IP addresses not allowed");
-
-		if(naddrs == 1) {
-			sinfo->tuple[IP_CT_DIR_REPLY].src.ip = addrs[0].s_addr;
-		}
-
-		sinfo->flags |= XT_CONNTRACK_REPLSRC;
-		break;
-
-	case '6':
-		xtables_check_inverse(optarg, &invert, &optind, 0);
-
-		if (invert)
-			sinfo->invflags |= XT_CONNTRACK_REPLDST;
-
-		xtables_ipparse_any(argv[optind-1], &addrs,
-					&sinfo->dipmsk[IP_CT_DIR_REPLY],
-					&naddrs);
-		if(naddrs > 1)
-			xtables_error(PARAMETER_PROBLEM,
-				"multiple IP addresses not allowed");
-
-		if(naddrs == 1) {
-			sinfo->tuple[IP_CT_DIR_REPLY].dst.ip = addrs[0].s_addr;
-		}
-
-		sinfo->flags |= XT_CONNTRACK_REPLDST;
-		break;
-
-	case '7':
-		xtables_check_inverse(optarg, &invert, &optind, 0);
-
-		parse_statuses(argv[optind-1], sinfo);
-		if (invert) {
-			sinfo->invflags |= XT_CONNTRACK_STATUS;
-		}
-		sinfo->flags |= XT_CONNTRACK_STATUS;
-		break;
-
-	case '8':
-		xtables_check_inverse(optarg, &invert, &optind, 0);
-
-		parse_expires(argv[optind-1], sinfo);
-		if (invert) {
-			sinfo->invflags |= XT_CONNTRACK_EXPIRES;
-		}
-		sinfo->flags |= XT_CONNTRACK_EXPIRES;
-		break;
-
-	default:
-		return 0;
-	}
-
-	*flags = sinfo->flags;
-	return 1;
-}
-
 static int
 conntrack_mt_parse(int c, bool invert, unsigned int *flags,
                    struct xt_conntrack_mtinfo2 *info)
@@ -1052,12 +890,6 @@ conntrack_dump(const struct xt_conntrack
 	}
 }
 
-static void conntrack_print(const void *ip, const struct xt_entry_match *match,
-                            int numeric)
-{
-	matchinfo_print(ip, match, numeric, "");
-}
-
 static void
 conntrack1_mt4_print(const void *ip, const struct xt_entry_match *match,
                      int numeric)
@@ -1094,11 +926,6 @@ conntrack_mt6_print(const void *ip, cons
 	conntrack_dump((const void *)match->data, "", NFPROTO_IPV6, numeric);
 }
 
-static void conntrack_save(const void *ip, const struct xt_entry_match *match)
-{
-	matchinfo_print(ip, match, 1, "--");
-}
-
 static void conntrack_mt_save(const void *ip,
                               const struct xt_entry_match *match)
 {
@@ -1131,21 +958,6 @@ conntrack1_mt6_save(const void *ip, cons
 	conntrack_dump(&up, "--", NFPROTO_IPV6, true);
 }
 
-static struct xtables_match conntrack_mt_v0_reg = {
-	.version       = XTABLES_VERSION,
-	.name          = "conntrack",
-	.revision      = 0,
-	.family        = NFPROTO_IPV4,
-	.size          = XT_ALIGN(sizeof(struct xt_conntrack_info)),
-	.userspacesize = XT_ALIGN(sizeof(struct xt_conntrack_info)),
-	.help          = conntrack_mt_help,
-	.parse         = conntrack_parse,
-	.final_check   = conntrack_mt_check,
-	.print         = conntrack_print,
-	.save          = conntrack_save,
-	.extra_opts    = conntrack_mt_opts_v0,
-};
-
 static struct xtables_match conntrack_mt_v1_reg = {
 	.version       = XTABLES_VERSION,
 	.name          = "conntrack",
@@ -1208,7 +1020,6 @@ static struct xtables_match conntrack_mt
 
 void _init(void)
 {
-	xtables_register_match(&conntrack_mt_v0_reg);
 	xtables_register_match(&conntrack_mt_v1_reg);
 	xtables_register_match(&conntrack_mt6_v1_reg);
 	xtables_register_match(&conntrack_mt_v2_reg);
